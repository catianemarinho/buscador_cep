# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import requests
import re

def valid_cep(cep):
    # Clear the entry field
    entry_1.delete(0, 'end')

    # Check if the CEP contains any alphabetic characters or is not 8 characters long
    if re.search('[a-zA-Z]', cep) or len(cep) != 8:
        # If the CEP is invalid, construct an error message and insert it into the entry field
        error_message = f"O CEP '{cep}' não é válido"
        return entry_1.insert(0, error_message)
    else:
        # If the CEP is valid, format it and search for its details
        formatted_cep = f"{cep[:5]}-{cep[-3:]}"
        serch_result = get_address_data(cep)
        # Insert the formatted CEP into the entry field
        entry_1.insert(0, formatted_cep)
        # Return the search result
        return serch_result

def get_address_data(cep):
    url = f"https://viacep.com.br/ws/{cep}/json/"
    response =  requests.get(url).json()
    
    # Update the text item in the canvas with the value from the response
    canvas.itemconfig(logradouro, text=response["logradouro"])
    canvas.itemconfig(uf, text=response["uf"])
    canvas.itemconfig(cidade, text=response["localidade"])
    canvas.itemconfig(bairro, text=response["bairro"])
    canvas.itemconfig(ddd, text=response["ddd"])



OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(
    r"C:\Users\User\Desktop\python_na_pratica\buscador_cep\build\assets\frame0"
)


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("547x422")
window.configure(bg="#FAFBFF")


canvas = Canvas(
    window,
    bg="#FAFBFF",
    height=422,
    width=547,
    bd=0,
    highlightthickness=0,
    relief="ridge",
)

canvas.place(x=0, y=0)
canvas.create_rectangle(42.0, 117.0, 242.0, 144.0, fill="#FFFFFF", outline="")

canvas.create_text(
    42.0,
    91.0,
    anchor="nw",
    text="Insira o CEP desejado",
    fill="#3F3F3F",
    font=("Poppins Medium", 12 * -1),
)

canvas.create_text(
    42.0,
    30.0,
    anchor="nw",
    text="Pesquisar Endereço",
    fill="#1E1E1E",
    font=("Poppins Bold", 24 * -1),
)

canvas.create_rectangle(34.0, 205.0, 513.0, 380.0, fill="#FFFFFF", outline="")

canvas.create_rectangle(50.0, 248.0, 285.0, 278.0, fill="#DFE8FD", outline="")

canvas.create_rectangle(50.0, 325.0, 285.0, 355.0, fill="#DFE8FE", outline="")

canvas.create_rectangle(299.0, 325.0, 391.0, 355.0, fill="#DFE8FE", outline="")

canvas.create_rectangle(405.0, 325.0, 497.0, 355.0, fill="#DFE8FE", outline="")

canvas.create_rectangle(299.0, 248.0, 498.0, 278.0, fill="#DFE8FE", outline="")

entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(156.5, 130.5, image=entry_image_1)
entry_1 = Entry(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
entry_1.place(x=75.0, y=117.0, width=163.0, height=25.0)

button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: valid_cep(entry_1.get()),
    relief="flat",
)
button_1.place(x=254.0, y=117.0, width=90.0, height=27.0)

image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(57.0, 130.0, image=image_image_1)

canvas.create_text(
    42.0,
    176.0,
    anchor="nw",
    text="Resultado da busca por CEP",
    fill="#3F3F3F",
    font=("Poppins Bold", 14 * -1),
)

canvas.create_text(
    50.0,
    301.0,
    anchor="nw",
    text="Cidade",
    fill="#5D5D5D",
    font=("Poppins SemiBold", 12 * -1),
)

canvas.create_text(
    299.0,
    301.0,
    anchor="nw",
    text="Estado",
    fill="#5D5D5D",
    font=("Poppins SemiBold", 12 * -1),
)

canvas.create_text(
    406.0,
    301.0,
    anchor="nw",
    text="DDD",
    fill="#5D5D5D",
    font=("Poppins SemiBold", 12 * -1),
)

canvas.create_text(
    299.0,
    224.0,
    anchor="nw",
    text="Bairro",
    fill="#5D5D5D",
    font=("Poppins SemiBold", 12 * -1),
)

canvas.create_text(
    50.0,
    224.0,
    anchor="nw",
    text="Logradouro",
    fill="#5D5D5D",
    font=("Poppins SemiBold", 12 * -1),
)

logradouro = canvas.create_text(
    59.0,
    255.0,
    anchor="nw",
    text=" ",
    fill="#3B3B3B",
    font=("Poppins Regular", 11 * -1),
)

cidade = canvas.create_text(
    59.0,
    331.0,
    anchor="nw",
    text=" ",
    fill="#3B3B3B",
    font=("Poppins Regular", 11 * -1),
)

bairro = canvas.create_text(
    305.0,
    254.0,
    anchor="nw",
    text=" ",
    fill="#3B3B3B",
    font=("Poppins Regular", 11 * -1),
)

uf = canvas.create_text(
    306.0,
    331.0,
    anchor="nw",
    text=" ",
    fill="#3B3B3B",
    font=("Poppins Regular", 11 * -1),
)

ddd = canvas.create_text(
    412.0,
    337.0,
    anchor="nw",
    text=" ",
    fill="#3B3B3B",
    font=("Poppins Regular", 11 * -1),
)
window.resizable(False, False)
window.mainloop()
